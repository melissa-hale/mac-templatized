import glob
import yaml
import os

def get_vars_path():
    """ Returns the abs path of the /vars directory  """
    path = f'{os.path.dirname(__file__)}'
    split = path.split('/')[:-1]
    split.append('vars')
    return '/'.join(split)

def get_use_case_paths(vars_path, target):
    """ Returns an array of paths to the yml files in the use_cases dir inside the targeted use case pkg """
    return glob.glob(f'{vars_path}/{target}/use_cases/*.yml')

def get_use_case_template_vars(target):
    """ Returns a dictionary of vars for the targeted use case pkg
     
    Dictionary includes a "defaults" key which represents the vars in the default.yml inside the target
    
    ...as well as keys for each use_case, generated by the name of the yml
    The use case "options" defined in the data source yml file (e.g. vars/snowflake.yml) must match these file names
    """
    vars_path = get_vars_path()
    
    ## first get the default vars for the targeted use case package
    with open(f'{vars_path}/{target}/default.yml', 'r') as default_file:
        use_case_template_vars = yaml.safe_load(default_file)

    use_case_paths = get_use_case_paths(vars_path, target)
    # for each use case yml, load it as a json obj and add it to the dictionary of vars (initialized by getting the defaults)
    for use_case_path in use_case_paths:
        with open(use_case_path, 'r') as use_case_file:
            use_case_vars = yaml.safe_load(use_case_file)
        use_case_template_vars = use_case_template_vars | use_case_vars

    return use_case_template_vars

def get_source_vars(data_source):
    source_vars_path = f'{get_vars_path()}/{data_source}.yml'
    with open(f'{source_vars_path}', 'r') as source_vars_file:
        source_vars = yaml.safe_load(source_vars_file)
    
    return source_vars